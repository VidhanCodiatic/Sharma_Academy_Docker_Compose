version: '3.8'

services:
  web:
    build: .
      # context: .
      # dockerfile: ./compose/local/django/Dockerfile
    env_file:
      - .env
    image: django_celery_example_web
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    # '/start' is the shell script used to run the service
    # command: python manage.py runserver 0.0.0.0:8000
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - .:/SharmaAcademy
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - redis
      - db

  db:
    image: postgres
    volumes:
      - postgres_data1:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: redis
    ports:
      - "6379:6379"

  celery_worker:
    build: .
      # context: .
      # dockerfile: ./compose/local/django/Dockerfile
    env_file:
      - .env
    image: django_celery_example_celery_worker
    command: celery -A Sharma_Academy worker -l INFO
    volumes:
      - .:/SharmaAcademy
    depends_on:
      - redis
      - db

  stripe_webhook:
    build: .
    command: ./stripe listen --forward-to localhost:8000/webhook
    volumes:
      - .:/SharmaAcademy
    depends_on:
      - web
    # image: "stripe/stripe-cli:latest"
    # container_name: stripe_cli
    # network_mode: host
    # environment:
    #     STRIPE_API_KEY: ${STRIPE_SECRET_API_KEY}
    #     STRIPE_DEVICE_NAME: ${STRIPE_DEVICE_NAME}

  # celery_beat:
  #   build: .
  #     # context: .
  #     # dockerfile: ./compose/local/django/Dockerfile
  #   image: django_celery_example_celery_beat
  #   command: celery -A Sharma_Academy beat -l INFO
  #   volumes:
  #     - .:/SharmaAcademy
  #   # env_file:
  #   #   - ./.env/.dev-sample
  #   depends_on:
  #     - redis
  #     - db

  # flower:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/django/Dockerfile
  #   image: django_celery_example_celery_flower
  #   command: /start-flower
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - ./.env/.dev-sample
  #   ports:
  #     - 5557:5555
  #   depends_on:
  #     - redis
  #     - db

volumes:
  postgres_data1:



# stripe listen --foward-to http://host-name:8000/webhook/






# version: "3.9"
   
# services:
#   db:
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/SharmaAcademy
#     ports:
#       - "8000:8000"
#     environment:
#       - POSTGRES_NAME=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     depends_on:
#       - db


# version: '3.8'

# services:
#   web:
#     build: .
#     command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#     volumes:
#       - .:/SharmaAcademy
#     ports:
#       - 8000:8000
#     # env_file:
#     #   - ./.env.dev
#     environment:
#       - DB_HOST=db
#       - DB_NAME=SharmaAcademy
#       - DB_USER=postgres
#       - DB_PASS=developer
#     depends_on:
#       - db
#   db:
#     image: postgres:15
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER = postgres
#       - POSTGRES_PASSWORD = developer
#       - POSTGRES_DB = SharmaAcademy
#     ports:
#       - "5432:5432"

# volumes:
#   postgres_data: